
pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        // IMAGE_NAME = 'churn-api'
        ECR_REPO = "<your_account_id>.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME}"
        IMAGE_NAME = 'pratish7991/churn-api'  // Replace with your actual Docker Hub repo
        DOCKERHUB_CREDENTIALS_ID = 'dockerhub-creds'  // Jenkins credential ID
    }

    stages {
        stage('Clone Repo') {
            steps {
                script {
                    echo 'Cloning Guthub repo to Jenkins.......'
                    checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'github-creds', url: 'https://github.com/pratish7991/mlopsproject.git']])
                }
            }
        }

        stage('Set up Python Venv and Install Requirements') {
            steps {
                bat '''
                    python -m venv venv
                    call venv\\Scripts\\activate
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        // stage('Run Tests') {
        //     steps {
        //         bat '''
        //             call venv\\Scripts\\activate
        //             pytest tests
        //         '''
        //     }
        // }

        stage('Build Docker Image') {
            steps {
                bat 'docker build -t %IMAGE_NAME% .'
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CREDENTIALS_ID}", usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    bat '''
                        echo %DOCKER_PASSWORD% | docker login -u %DOCKER_USERNAME% --password-stdin
                        docker push %IMAGE_NAME%
                    '''
                }
            }
        }

    }
}